@using TechXpress.Web.Services.Interfaces
@model TechXpress.Data.Models.ProductViewModel
@inject IAICommerceService AiCommerce

<div class="card h-100 product-card shadow-sm hover-shadow transition-all">
    <!-- Product Image with Badges and Quick View -->
    <div class="product-image-container position-relative overflow-hidden">
        <img src="@Model.ImageUrl" class="card-img-top product-image" alt="@Model.Name" />

        <!-- Badges -->
        <div class="product-badges">
            @if (Model.IsFeatured)
            {
                <span class="badge bg-gradient-purple">Featured</span>
            }
            @if (Model.CreatedDate > DateTime.Now.AddDays(-7))
            {
                <span class="badge bg-success">New</span>
            }
            @if (Model.StockQuantity == 0)
            {
                <span class="badge bg-danger sold-out-badge">Sold Out</span>
            }
        </div>

        <!-- Quick View Button -->
        <div class="quick-view-overlay d-flex align-items-center justify-content-center">
            <button class="btn btn-primary rounded-circle quick-view-btn"
                    data-product-id="@Model.Id"
                    title="Quick View">
                <i class="fas fa-eye"></i>
            </button>
        </div>
    </div>

    <!-- Card Body -->
    <div class="card-body d-flex flex-column">
        <div class="d-flex justify-content-between align-items-start mb-2">
            <span class="text-muted small">@Model.Category?.Name</span>
        </div>

        <!-- Title -->
        <h5 class="card-title mb-2 text-truncate-2" title="@Model.Name">@Model.Name</h5>

        <!-- Rating -->
        @if (Model.Reviews.Any())
        {
            <div class="mb-2">
                <div class="rating-stars">
                    @{
                        var avgRating = Model.Reviews.Average(r => r.Rating);
                    }
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= (int)avgRating)
                        {
                            <i class="fas fa-star text-warning"></i>
                        }
                        else if (i - 0.5 <= avgRating)
                        {
                            <i class="fas fa-star-half-alt text-warning"></i>
                        }
                        else
                        {
                            <i class="far fa-star text-warning"></i>
                        }
                    }
                    <small class="text-muted">(@Model.Reviews.Count())</small>
                </div>
            </div>
        }

        <!-- Price and Stock -->
        <div class="mt-auto">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span class="h5 text-primary fw-bold">@Model.Price.ToString("C")</span>
                </div>
                <span class="badge bg-light text-dark small stock-badge">
                    @Model.StockQuantity in stock
                </span>
            </div>
        </div>
    </div>

    <!-- Footer Buttons (Responsive Row) -->
    <div class="card-footer bg-transparent border-top-0 pt-0">
        <div class="d-flex flex-wrap gap-2 justify-content-between">
            <!-- Details -->
            <a asp-action="Details" asp-route-id="@Model.Id"
               class="btn btn-outline-primary btn-sm flex-grow-1"
               title="View Details">
                <i class="fas fa-info-circle me-1"></i> Details
            </a>

            <!-- Add to Cart -->
            <form asp-controller="Cart" asp-action="AddToCart" method="post" class="flex-grow-1">
                <input type="hidden" name="productId" value="@Model.Id" />
                <button type="submit"
                        class="btn btn-sm w-100 @(Model.StockQuantity == 0 ? "btn-secondary" : "btn-success")"
                @(Model.StockQuantity == 0 ? "disabled" : "")
                        title="@(Model.StockQuantity == 0 ? "Out of stock" : "Add to Cart")">
                    <i class="fas @(Model.StockQuantity == 0 ? "fa-ban" : "fa-cart-plus") me-1"></i>
                    @(Model.StockQuantity == 0 ? " Out" : "Add")
                </button>
            </form>

            <!-- AI Description -->
            <button class="btn btn-outline-info btn-sm ai-description-btn flex-grow-1"
                    data-product-id="@Model.Id"
                    title="AI Description">
                <i class="fas fa-robot"></i>
            </button>
        </div>
    </div>
</div>

<style>
    .product-card {
        border-radius: 0.75rem;
        transition: all 0.3s ease;
        border: 1px solid rgba(0,0,0,0.1);
    }

    .hover-shadow:hover {
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        transform: translateY(-5px);
    }

    .product-image-container {
        height: 180px;
        background-color: white;
        border-radius: 0.75rem 0.75rem 0 0;
    }

    .product-image {
        height: 100%;
        width: 100%;
        object-fit: contain;
        padding: 1rem;
        transition: transform 0.5s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-badges {
        position: absolute;
        top: 10px;
        left: 10px;
        display: flex;
        flex-direction: column;
        gap: 5px;
        z-index: 1;
    }

        .product-badges .badge {
            font-weight: 600;
        }

    .bg-gradient-purple {
        background: linear-gradient(135deg, #8a2be2 0%, #4b0082 100%);
        color: white;
        font-size: 0.7rem;
        padding: 0.35em 0.65em;
    }

    .bg-success {
        font-size: 0.7rem;
        padding: 0.35em 0.65em;
    }

    .sold-out-badge {
        font-size: 0.6rem;
        padding: 0.25em 0.5em;
        transform: scale(0.9);
        transform-origin: left;
    }

    .quick-view-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.3);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .product-card:hover .quick-view-overlay {
        opacity: 1;
    }

    .text-truncate-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .rating-stars {
        font-size: 0.9rem;
        direction: rtl !important;
    }

    .stock-badge {
        font-size: 0.75rem;
    }

    /* Responsive Button Fix */
    .card-footer .btn {
        min-width: 90px;
    }
</style>

<script>
    $(document).ready(function () {
        $('.wishlist-btn').click(function (e) {
            e.preventDefault();
            $(this).find('i').toggleClass('far fas text-danger');
            const isWishlisted = $(this).find('i').hasClass('fas');
            $(this).attr('title', isWishlisted ? 'Remove from Wishlist' : 'Add to Wishlist');

            const toast = new bootstrap.Toast(document.getElementById('wishlistToast'));
            $('.toast-body').text(isWishlisted ? 'Added to wishlist!' : 'Removed from wishlist');
            toast.show();
        });
    });
</script>
